

###log1p 函数的意义
- 在数据预处理时首先可以对偏度比较大的数据用log1p函数进行转化，使其更加服从高斯分布，此步处理可能会使我们后续的分类结果得到一个更好的结果；
- 平滑处理很容易被忽略掉，导致模型的结果总是达不到一定的标准，同样使用逼格更高的log1p能避免复值得问题——复值指一个自变量对应多个因变量；
- log1p的使用就像是将一个数据压缩到了一个区间，与数据的标准化类似。
由于前面使用过log1p将数据进行了压缩，所以最后需要记得将预测出的平滑数据进行一个还原，而还原过程就是log1p的逆运算expm1。

### BLAS
BLAS(Basic Linear Algebra Subprograms)是一组线性代数计算中通用的基本运算操作函数集合[1] 。
BLAS Technical (BLAST) Forum负责规范BLAS函数接口, 并在网站[1]公布一个由Fortran语言编写的BLAS库。
这个Fortran版BLAS库通常被称为BLAS参考库(the reference implementation)。 
BLAS参考库使用的算法能高效地给出正确的结果，但仍有许多优化潜力。
要想获得更高的计算效率，可以使用优化的BLAS库。(like openBLAS, cuBLAS)

### 矩阵处理工具LAPACK(Linear Algebra PACKage)
https://blog.csdn.net/helei001/article/details/18447001

### MKL 矩阵运算


### MMX-> SSE-> AVX 指令集
- MMX: intel 奔腾处理器用的 (x86 handle SIMD)
- SSE: 该指令集解决了MMX指令集身上存在的两大问题，引入新的独立寄存器解决了与浮点运算间的冲突问题，同时也就支持了浮点SIMD运算
- AVX: 将SSE时代最大宽度为128-bit的寄存器拓宽到了256-bit。
- VSX：64 bits
- ps: https://baijiahao.baidu.com/s?id=1670915069941232375&wfr=spider&for=pc

### ps
- openmp: https://blog.csdn.net/cloud_desktop/article/details/24421793
gcc need option '-fopenmp'
- exp(x):  e 的 x 次幂的值。
- dims: 维数
- omap3/omap4:  德州仪器开放硬件平台(基于linux). 树莓派没有开放一些关键性的设计（比如高速摄像头）。
- simd: 单个指令操作多个数据。
- blas, cblas, openblas, atlas, lapack, mkl 性能对比： https://www.zhihu.com/question/27872849


### READ me 
- Environment variables control the disabling of certain explicit SIMD optimizations.
```
x64 options:
TH_NO_AVX2=1 # disable AVX2 codepaths
TH_NO_AVX=1  # disable AVX codepaths
TH_NO_SSE=1  # disable SSE codepaths

ppc64le options:
TH_NO_VSX=1  # disable VSX codepaths
```