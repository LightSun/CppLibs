
### torch 属性/函数表
- key-value:      _gen    torch.Generator
- key-value:      getmetatable    function: 0000000000612a05
- key-value:      seed    function: 000000000060f318
- key-value:      rand    function: 0000000000587469
- key-value:      linspace        function: 000000000057f6bc
- key-value:      mod     function: 000000000044a8a8
- key-value:      median  function: 000000000045ec78
- key-value:      dot     function: 0000000000447057
- key-value:      acos    function: 00000000005812a1
- key-value:      asin    function: 0000000000581f9a
- key-value:      isequal function: 00000000006125e4
- key-value:      bitand  function: 0000000000449d0b
- key-value:      addmv   function: 00000000004506b5
- key-value:      cat     function: 00000000004601c7
- key-value:      pushudata       function: 000000000061238c
- key-value:      sign    function: 0000000000463666
- key-value:      setenv  function: 000000000061290d
- key-value:      ceil    function: 0000000000583ddf
- key-value:      pstrf   function: 0000000000592b54
- key-value:      gt      function: 0000000000468922
- key-value:      csub    function: 00000000004481f2
- key-value:      ger     function: 000000000044fac1
- key-value:      exp     function: 00000000005809fb
- key-value:      pow     function: 0000000000586f34
- key-value:      bitxor  function: 000000000044a4c9
- key-value:      conv2   function: 0000000000464701
- key-value:      triu    function: 000000000045f594
- key-value:      cremainder      function: 000000000044ccde
- key-value:      cfmod   function: 000000000044c915
- key-value:      gels    function: 000000000058d9d6
- key-value:      neg     function: 0000000000585945
- key-value:      sigmoid function: 00000000005855e7
- key-value:      addcdiv function: 000000000044e838
- key-value:      toc     function: 0000000000444b8b
- key-value:      mm      function: 000000000044f169
- key-value:      ne      function: 000000000046a8ca
- key-value:      le      function: 000000000046910c
- key-value:      cpow    function: 000000000044b9f1
- key-value:      svd     function: 0000000000590b24
- key-value:      qr      function: 0000000000593012
- key-value:      ge      function: 00000000004698f6
- key-value:      cinv    function: 0000000000585ca3
- key-value:      histc   function: 000000000057d379
- key-value:      setnumthreads   function: 0000000000444d9f
- key-value:      cumsum  function: 0000000000453dd2
- key-value:      tril    function: 000000000045f106
- key-value:      match   function: 000000000044b25f
- key-value:      cbitxor function: 000000000044d839
- key-value:      geometric       function: 00000000004621ba
- key-value:      cmax    function: 0000000000456558
- key-value:      reshape function: 00000000004463ac
- key-value:      xcorr3  function: 000000000046794e
- key-value:      symeig  function: 000000000058fcbc
- key-value:      multinomial     function: 000000000058845a
- key-value:      getnumthreads   function: 0000000000444d75
- key-value:      mul     function: 00000000004485d1
- key-value:      setmetatable    function: 0000000000612b18
- key-value:      getconstructortable     function: 000000000061251f
- key-value:      lshift  function: 0000000000448d8f
- key-value:      randn   function: 000000000058799e
- key-value:      nonzero function: 000000000046ac60
- key-value:      scatter function: 0000000000446d66
- key-value:      tic     function: 0000000000444b54
- key-value:      remainder       function: 000000000044992c
- key-value:      addbmm  function: 0000000000452a91
- key-value:      numel   function: 000000000045393e
- key-value:      baddbmm function: 0000000000453685
- key-value:      lt      function: 0000000000468138
- key-value:      metatype        function: 0000000000612285
- key-value:      random  function: 0000000000461bed
- key-value:      getRNGState     function: 000000000060f70e
- key-value:      gesv    function: 000000000058d498
- key-value:      initialSeed     function: 000000000060f44b
- key-value:      ormqr   function: 00000000005945b2
- key-value:      orgqr   function: 0000000000593936
- key-value:      range   function: 0000000000457c7e
- key-value:      geqrf   function: 00000000005934d0
- key-value:      std     function: 000000000057c594
- key-value:      rsqrt   function: 0000000000585194
- key-value:      potri   function: 000000000059208e
- key-value:      crshift function: 000000000044c54c
- key-value:      squeeze function: 0000000000463308
- key-value:      uniform function: 0000000000589e92
- key-value:      potrf   function: 0000000000591496
- key-value:      inverse function: 0000000000590f07
- key-value:      bernoulli       function: 0000000000462cf1
- key-value:      zero    function: 00000000004455e6
- key-value:      multinomialAlias_       function: 0000000000589049
- key-value:      var     function: 000000000057bea6
- key-value:      frac    function: 0000000000584d41
- key-value:      trtrs   function: 000000000058f1c2
- key-value:      manualSeed      function: 000000000060f57e
- key-value:      floor   function: 0000000000584232
- key-value:      logNormal       function: 000000000058c975
- key-value:      cauchy  function: 000000000058bb24
- key-value:      mean    function: 000000000057b7b8
- key-value:      factory function: 00000000006124a1
- key-value:      sort    function: 00000000004590e8
- key-value:      normal  function: 000000000058acdb
- key-value:      potrs   function: 0000000000591aff
- key-value:      multinomialAliasSetup_  function: 000000000058899e
- key-value:      newmetatable    function: 0000000000611721
- key-value:      version function: 0000000000612a4f
- key-value:      atan2   function: 00000000005867ec
- key-value:      lerp    function: 00000000005862d0
- key-value:      eig     function: 000000000059036a
- key-value:      addr    function: 0000000000451e9d
- key-value:      trunc   function: 0000000000584685
- key-value:      zeros   function: 0000000000445c57
- key-value:      round   function: 000000000058398c
- key-value:      sqrt    function: 0000000000583539
- key-value:      cdiv    function: 000000000044bdba
- key-value:      exponential     function: 000000000058cf5a
- key-value:      atan    function: 0000000000582c93
- key-value:      cmin    function: 0000000000455f9d
- key-value:      xcorr2  function: 000000000046579c
- key-value:      sum     function: 0000000000454722
- key-value:      cosh    function: 00000000005816f4
- key-value:      cumprod function: 0000000000454266
- key-value:      equal   function: 0000000000447344
- key-value:      cmod    function: 000000000044dc02
- key-value:      renorm  function: 000000000057ecbb
- key-value:      setheaptracking function: 0000000000444e27
- key-value:      fmod    function: 000000000044954d
- key-value:      cos     function: 0000000000580e4e
- key-value:      log1p   function: 00000000005805a8
- key-value:      log     function: 0000000000580155
- key-value:      logspace        function: 000000000057fd02
- key-value:      dist    function: 000000000057f076
- key-value:      ones    function: 0000000000445fcc
- key-value:      norm    function: 000000000057e773
- key-value:      kthvalue        function: 000000000045dbbc
- key-value:      abs     function: 000000000050de11
- key-value:      all     function: 000000000046af12
- key-value:      any     function: 000000000046b1c4
- key-value:      add     function: 0000000000447a9b
- key-value:      pointer function: 0000000000612750
- key-value:      tanh    function: 00000000005830e6
- key-value:      mv      function: 000000000044ecc5
- key-value:      rshift  function: 000000000044916e
- key-value:      max     function: 00000000004559e2
- key-value:      tan     function: 0000000000582840
- key-value:      prod    function: 0000000000454bde
- key-value:      getnumcores     function: 0000000000444dcb
- key-value:      mode    function: 000000000045e41a
- key-value:      cbitor  function: 000000000044d470
- key-value:      sinh    function: 00000000005823ed
- key-value:      setRNGState     function: 000000000060f987
- key-value:      getenv  function: 0000000000612980
- key-value:      conv3   function: 0000000000466875
- key-value:      randperm        function: 00000000004581e2
- key-value:      eq      function: 000000000046a0e0
- key-value:      bhistc  function: 000000000057e15e
- key-value:      bitor   function: 000000000044a0ea
- key-value:      min     function: 00000000004552e0
- key-value:      updateerrorhandlers     function: 0000000000444f10
- key-value:      clshift function: 000000000044c183
- key-value:      addmm   function: 00000000004512a9
- key-value:      topk    function: 000000000045d16a
- key-value:      fill    function: 00000000004458e2
- key-value:      sin     function: 0000000000581b47
- key-value:      isatty  function: 0000000000444a9e
- key-value:      trace   function: 000000000045680e
- key-value:      cross   function: 0000000000456d68
- key-value:      bmm     function: 000000000044f621
- key-value:      cbitand function: 000000000044d0a7
- key-value:      gather  function: 000000000044684b
- key-value:      eye     function: 00000000004576b6
- key-value:      diag    function: 00000000004571f6
- key-value:      getdefaulttensortype    function: 0000000000444bde
- key-value:      addcmul function: 000000000044e21d
- key-value:      clamp   function: 000000000044ad0d
- key-value:      cmul    function: 000000000044b628
- key-value:      div     function: 00000000004489b0
- key-value:      typename        function: 0000000000612587

### ffi 修改日志
- add 
```c
#ifndef complex
#define complex _Complex
#endif
```

###log1p 函数的意义
- 在数据预处理时首先可以对偏度比较大的数据用log1p函数进行转化，使其更加服从高斯分布，此步处理可能会使我们后续的分类结果得到一个更好的结果；
- 平滑处理很容易被忽略掉，导致模型的结果总是达不到一定的标准，同样使用逼格更高的log1p能避免复值得问题——复值指一个自变量对应多个因变量；
- log1p的使用就像是将一个数据压缩到了一个区间，与数据的标准化类似。
由于前面使用过log1p将数据进行了压缩，所以最后需要记得将预测出的平滑数据进行一个还原，而还原过程就是log1p的逆运算expm1。

### BLAS
BLAS(Basic Linear Algebra Subprograms)是一组线性代数计算中通用的基本运算操作函数集合[1] 。
BLAS Technical (BLAST) Forum负责规范BLAS函数接口, 并在网站[1]公布一个由Fortran语言编写的BLAS库。
这个Fortran版BLAS库通常被称为BLAS参考库(the reference implementation)。 
BLAS参考库使用的算法能高效地给出正确的结果，但仍有许多优化潜力。
要想获得更高的计算效率，可以使用优化的BLAS库。(like openBLAS, cuBLAS)

### 矩阵处理工具LAPACK(Linear Algebra PACKage)
https://blog.csdn.net/helei001/article/details/18447001

### MKL 矩阵运算


### MMX-> SSE-> AVX 指令集
- MMX: intel 奔腾处理器用的 (x86 handle SIMD)
- SSE: 该指令集解决了MMX指令集身上存在的两大问题，引入新的独立寄存器解决了与浮点运算间的冲突问题，同时也就支持了浮点SIMD运算
- AVX: 将SSE时代最大宽度为128-bit的寄存器拓宽到了256-bit。
- VSX：64 bits
- ps: https://baijiahao.baidu.com/s?id=1670915069941232375&wfr=spider&for=pc

### ps
- openmp: https://blog.csdn.net/cloud_desktop/article/details/24421793
gcc need option '-fopenmp'
- exp(x):  e 的 x 次幂的值。
- dims: 维数
- omap3/omap4:  德州仪器开放硬件平台(基于linux). 树莓派没有开放一些关键性的设计（比如高速摄像头）。
- simd: 单个指令操作多个数据。
- blas, cblas, openblas, atlas, lapack, mkl 性能对比： https://www.zhihu.com/question/27872849


### READ me 
- Environment variables control the disabling of certain explicit SIMD optimizations.
```
x64 options:
TH_NO_AVX2=1 # disable AVX2 codepaths
TH_NO_AVX=1  # disable AVX codepaths
TH_NO_SSE=1  # disable SSE codepaths

ppc64le options:
TH_NO_VSX=1  # disable VSX codepaths
```